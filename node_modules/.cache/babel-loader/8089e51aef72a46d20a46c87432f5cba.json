{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/moving-square/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css'; // import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nimport * as THREE from \"three\";\n\nclass App extends Component {\n  componentDidMount() {\n    // === THREE.JS CODE START ===\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    this.mount.body.appendChild(renderer.domElement);\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    camera.position.z = 5;\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate(); // === THREE.JS EXAMPLE CODE END ===\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: ref => this.mount = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), rootElement); // ReactDOM.render(<App />, document.getElementById('root'));\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/Users/zoe/Desktop/moving-square/src/index.js"],"names":["React","Component","ReactDOM","THREE","App","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","mount","body","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","ref","rootElement","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAAyC,OAAOC,QAAP,MAAqB,WAArB;AACzC,OAAO,aAAP,C,CACA;AACA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAE3BI,EAAAA,iBAAiB,GAAG;AACpB;AACC,QAAIC,KAAK,GAAG,IAAIH,KAAK,CAACI,KAAV,EAAZ;AACA,QAAIC,MAAM,GAAG,IAAIL,KAAK,CAACM,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAkBD,MAAM,CAACE,WAA1D,EAAuE,GAAvE,EAA4E,IAA5E,CAAb;AACA,QAAIC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAV,EAAf;AACA,SAAKC,KAAL,CAAWC,IAAX,CAAgBC,WAAhB,CAA6BJ,QAAQ,CAACK,UAAtC;AACA,QAAIC,QAAQ,GAAG,IAAIhB,KAAK,CAACiB,WAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAf;AACA,QAAIC,QAAQ,GAAG,IAAIlB,KAAK,CAACmB,iBAAV,CAA6B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA7B,CAAf;AACA,QAAIC,IAAI,GAAG,IAAIrB,KAAK,CAACsB,IAAV,CAAgBN,QAAhB,EAA0BE,QAA1B,CAAX;AACAf,IAAAA,KAAK,CAACoB,GAAN,CAAWF,IAAX;AACAhB,IAAAA,MAAM,CAACmB,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;;AACA,QAAIC,OAAO,GAAG,YAAY;AACxBC,MAAAA,qBAAqB,CAAED,OAAF,CAArB;AACAL,MAAAA,IAAI,CAACO,QAAL,CAAcC,CAAd,IAAmB,IAAnB;AACAR,MAAAA,IAAI,CAACO,QAAL,CAAcE,CAAd,IAAmB,IAAnB;AACApB,MAAAA,QAAQ,CAACqB,MAAT,CAAiB5B,KAAjB,EAAwBE,MAAxB;AACD,KALD;;AAMAqB,IAAAA,OAAO,GAjBY,CAkBpB;AACC;;AACDK,EAAAA,MAAM,GAAG;AACR,WAAQ;AAAK,MAAA,GAAG,EAAEC,GAAG,IAAK,KAAKpB,KAAL,GAAaoB,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACA;;AAxB0B;;AA0B5B,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACApC,QAAQ,CAACgC,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBE,WAAzB,E,CACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";import ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport * as THREE from \"three\";\nclass App extends Component {\n\n\tcomponentDidMount() {\n\t// === THREE.JS CODE START ===\n\t\tvar scene = new THREE.Scene();\n\t\tvar camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n\t\tvar renderer = new THREE.WebGLRenderer();\n\t\tthis.mount.body.appendChild( renderer.domElement );\n\t\tvar geometry = new THREE.BoxGeometry( 1, 1, 1 );\n\t\tvar material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n\t\tvar cube = new THREE.Mesh( geometry, material );\n\t\tscene.add( cube );\n\t\tcamera.position.z = 5;\n\t\tvar animate = function () {\n\t\t  requestAnimationFrame( animate );\n\t\t  cube.rotation.x += 0.01;\n\t\t  cube.rotation.y += 0.01;\n\t\t  renderer.render( scene, camera );\n\t\t};\n\t\tanimate();\n\t// === THREE.JS EXAMPLE CODE END ===\n\t}\n\trender() {\n\t\treturn (<div ref={ref => (this.mount = ref)} />)\n\t}\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}